AWSTemplateFormatVersion: 2010-09-09
Description: "Practice: Building AWS architecture using cloudformation script"

Parameters: 
  EnvironmentName:
    Description: This is the name used to identify resources from this cloudformation stack
    Type: String
  
  VPCCIDR:
    Description: This is the CIDR block for the VPC
    Type: String

  PublicSubnet1CIDR:
    Description: The CIDR for PublicSubnet1
    Type: String

  PublicSubnet2CIDR:
    Description: The CIDR for PublicSubnet2
    Type: String

  WebSubnet1CIDR:
    Description: The CIDR for WebSubnet1
    Type: String

  WebSubnet2CIDR:
    Description: The CIDR for WebSubnet2
    Type: String

  AppSubnet1CIDR:
    Description: The CIDR for AppSubnet1
    Type: String

  AppSubnet2CIDR:
    Description: The CIDR for AppSubnet2
    Type: String

  DatabaseSubnet1CIDR:
    Description: The CIDR for DatabaseSubnet1
    Type: String

  DatabaseSubnet2CIDR:
    Description: The CIDR for DatabaseSubnet2
    Type: String

  AppLoadBalancerName:
    Description: A name for the Application Load Balancer
    Type: String

  AppAutoScalingName:
    Description: A name for the App Auto Scaling Group
    Type: String

  WebLoadBalancerName:
    Description: A name for the Web Load Balancer
    Type: String

  WebAutoScalingName:
    Description: A name for the Web Auto Scaling Group
    Type: String

  DBSubnetGroupName:
    Description: A name for the Database subnet group
    Type: String

  DBInstanceClassName:
    Description: The class for the database instance
    Type: String
    AllowedValues:
      - "db.m4.large"
      - "db.m4.xlarge"
      - "db.t3.micro"
      - "db.t3.small"

  DBAllocatedStorage:
    Description: Allocated size for the database
    Type: String

  DBMaxAllocatedStorage:
    Description: Maximum allocated size for the database
    Type: String

  DBPrimaryName:
    Description: Name for the primary database
    Type: String

  DBSecondaryName:
    Description: Name for the secondary storage
    Type: String

  DBUsername:
    Description: Username of the creator
    Type: String

  DBPassword:
    Description: Password of the creator
    Type: String

  WebBucketName:
    Description: Bucket were webserver data are stored
    Type: String

  LaunchTemplateName:
    Description: Name of the template used to create the instances
    Type: String

Resources:
  # AWS cloud


  # Virtiual Private Network
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for the database setup
      DBSubnetGroupName: !Ref DBSubnetGroupName
      SubnetIds:
        - !Ref DatabaseSubnet1
        - !Ref DatabaseSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Subnet Group
  
  WebAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Ref WebAutoScalingName
      LaunchTemplate:
        Version: 1
        LaunchTemplateName: !Ref LaunchTemplateName
      AvailabilityZones:
        - !Select 
          - 0 
          - Fn::GetAZs: '' 
        - !Select 
          - 1 
          - Fn::GetAZs: ''
      MaxSize: 2
      MinSize: 1
      DesiredCapacity: 2
      # Testing...Not sure wether to use !Ref or just pass a string
      VPCZoneIdentifier:
        - !Ref WebSubnet1
        - !Ref WebSubnet2
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: !Sub ${EnvironmentName} AutoScaling Web

  
  AppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Ref AppAutoScalingName
      LaunchTemplate:
        Version: 1
        LaunchTemplateName: !Ref LaunchTemplateName
      AvailabilityZones:
        - !Select 
          - 0 
          - Fn::GetAZs: '' 
        - !Select 
          - 1 
          - Fn::GetAZs: ''
      MaxSize: 2
      MinSize: 1
      DesiredCapacity: 2
      # Testing...Not sure wether to use !Ref or just pass a string
      VPCZoneIdentifier:
        - !Ref AppSubnet1
        - !Ref AppSubnet2
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: !Sub ${EnvironmentName} AutoScaling App

  WebLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref WebLoadBalancerName
      Subnets:
        - !Ref WebSubnet1
        - !Ref WebSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Web LoadBalancer

  AppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref AppLoadBalancerName
      Subnets:
        - !Ref AppSubnet1
        - !Ref AppSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} App LoadBalancer
  
  WebServerBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref WebBucketName
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Web Bucket

  AppServerFiles:
    Type: AWS::EFS::FileSystem
    Properties:
      AvailabilityZoneName: !Select 
        - 0 
        - Fn::GetAZs: ''
      BackupPolicy:
        Status: ENABLED
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: !Sub ${EnvironmentName} App Files System

  # AppElasticFileSystem:
  #   Type: AWS::EFS::FileSystem
  #   Properties:
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Availability Zone 1
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn:
      - InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - NatGateway1EIP
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} NatGateway AZ1


  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 0 
        - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} PublicSubnet AZ1

  WebSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref WebSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 0 
        - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} WebSubnet AZ1

  AppSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref AppSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 0 
        - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} AppSubnet AZ1

  DatabaseSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref DatabaseSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 0 
        - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DatabaseSubnet AZ1

  DatabasePrimary:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      MaxAllocatedStorage: !Ref DBMaxAllocatedStorage
      AvailabilityZone: !Select 
        - 0 
        - Fn::GetAZs: ''
      AssociatedRoles:
        - FeatureName: udacity-we
          RoleArn: arn:aws:iam::666016114849:user/udacity-we
      BackupRetentionPeriod: 2
      DBName: !Ref DBPrimaryName
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      DBInstanceClass: !Ref DBInstanceClassName
      Engine: postgres
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DB Primary

  DatabaseSecondary:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      MaxAllocatedStorage: !Ref DBMaxAllocatedStorage
      AvailabilityZone: !Select 
        - 1 
        - Fn::GetAZs: ''
      DBName: !Ref DBSecondaryName
      DBSubnetGroupName: DatabaseSubnetGroup
      DBInstanceClass: !Ref DBInstanceClassName
      Engine: postgres
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      SourceDBInstanceIdentifier: !Ref DatabasePrimary
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DB Secondary

  # Availability Zone 2
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn:
      - InternetGatewayAttachment
    Properties:
      Domain: vpc
  
  NatGateway2:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - NatGateway2EIP
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} NatGateway AZ2

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref PublicSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 1 
        - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} PublicSubnet AZ2

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} NatGateway AZ2

  WebSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref WebSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 1 
        - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} WebSubnet AZ2

  AppSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref AppSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 1 
        - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} AppSubnet AZ2

  DatabaseSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref DatabaseSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 1 
        - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DatabaseSubnet AZ2
